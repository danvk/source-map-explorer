exports['CLI should output multiple bundles result as html 1'] = `
<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <link rel="stylesheet" href="data:text/css;base64,LyogVmVuZG9yZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vcm1taC93ZWJ0cmVlbWFwL2Jsb2IvOWZhMGMwNjZhMTBlYTQ0MDJkOTYwYjBjNmMxYTQzMjg0NmFjN2ZjNC93ZWJ0cmVlbWFwLmNzcyAqLwoKLndlYnRyZWVtYXAtbm9kZSB7CiAgLyogUmVxdWlyZWQgYXR0cmlidXRlcy4gKi8KICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgb3ZlcmZsb3c6IGhpZGRlbjsgICAvKiBUbyBoaWRlIG92ZXJsb25nIGNhcHRpb25zLiAqLwogIGJhY2tncm91bmQ6IHdoaXRlOyAgLyogTm9kZXMgbXVzdCBiZSBvcGFxdWUgZm9yIHpJbmRleCBsYXllcmluZy4gKi8KICBib3JkZXI6IHNvbGlkIDFweCBibGFjazsgIC8qIENhbGN1bGF0aW9ucyBhc3N1bWUgMXB4IGJvcmRlci4gKi8KCiAgLyogT3B0aW9uYWw6IENTUyBhbmltYXRpb24uICovCiAgdHJhbnNpdGlvbjogdG9wICAgIDAuM3MsCiAgICAgICAgICAgICAgbGVmdCAgIDAuM3MsCiAgICAgICAgICAgICAgd2lkdGggIDAuM3MsCiAgICAgICAgICAgICAgaGVpZ2h0IDAuM3M7Cn0KCi8qIE9wdGlvbmFsOiBoaWdobGlnaHQgbm9kZXMgb24gbW91c2VvdmVyLiAqLwoud2VidHJlZW1hcC1ub2RlOmhvdmVyIHsKICBiYWNrZ3JvdW5kOiAjZWVlOwp9CgovKiBPcHRpb25hbDogRGlmZmVyZW50IGJhY2tncm91bmQgY29sb3JzIGRlcGVuZGluZyBvbiBzeW1ib2wuICovCi53ZWJ0cmVlbWFwLXN5bWJvbC1ic3MgewogIGJhY2tncm91bmQ6ICM2NkMyQTU7Cn0KLndlYnRyZWVtYXAtc3ltYm9sLWRhdGEgewogIGJhY2tncm91bmQ6ICNGQzhENjI7Cn0KLndlYnRyZWVtYXAtc3ltYm9sLXJlYWQtb25seV9kYXRhIHsKICBiYWNrZ3JvdW5kOiAjOERBMENCOwp9Ci53ZWJ0cmVlbWFwLXN5bWJvbC1jb2RlIHsKICBiYWNrZ3JvdW5kOiAjRTc4QUMzOwp9Ci53ZWJ0cmVlbWFwLXN5bWJvbC13ZWFrX3N5bWJvbCB7CiAgYmFja2dyb3VuZDogI0E2RDg1NDsKfQoud2VidHJlZW1hcC1zeW1ib2wtYnNzLndlYnRyZWVtYXAtYWdncmVnYXRlIHsKICBiYWNrZ3JvdW5kOiAjQjNFMkNEOwp9Ci53ZWJ0cmVlbWFwLXN5bWJvbC1kYXRhLndlYnRyZWVtYXAtYWdncmVnYXRlIHsKICBiYWNrZ3JvdW5kOiAjRkRDREFDOwp9Ci53ZWJ0cmVlbWFwLXN5bWJvbC1yZWFkLW9ubHlfZGF0YS53ZWJ0cmVlbWFwLWFnZ3JlZ2F0ZSB7CiAgYmFja2dyb3VuZDogI0NCRDVFODsKfQoud2VidHJlZW1hcC1zeW1ib2wtY29kZS53ZWJ0cmVlbWFwLWFnZ3JlZ2F0ZSB7CiAgYmFja2dyb3VuZDogI0Y0Q0FFNDsKfQoud2VidHJlZW1hcC1zeW1ib2wtd2Vha19zeW1ib2wud2VidHJlZW1hcC1hZ2dyZWdhdGUgewogIGJhY2tncm91bmQ6ICNFNkY1Qzk7Cn0KCiNsZWdlbmQgPiAqIHsKICBib3JkZXI6IHNvbGlkIDFweCAjNDQ0Owp9CgovKiBPcHRpb25hbDogRGlmZmVyZW50IGJvcmRlcnMgZGVwZW5kaW5nIG9uIGxldmVsLiAqLwoud2VidHJlZW1hcC1sZXZlbDAgewogIGJvcmRlcjogc29saWQgMXB4ICM0NDQ7Cn0KLndlYnRyZWVtYXAtbGV2ZWwxIHsKICBib3JkZXI6IHNvbGlkIDFweCAjNjY2Owp9Ci53ZWJ0cmVlbWFwLWxldmVsMiB7CiAgYm9yZGVyOiBzb2xpZCAxcHggIzg4ODsKfQoud2VidHJlZW1hcC1sZXZlbDMgewogIGJvcmRlcjogc29saWQgMXB4ICNhYWE7Cn0KLndlYnRyZWVtYXAtbGV2ZWw0IHsKICBib3JkZXI6IHNvbGlkIDFweCAjY2NjOwp9CgovKiBPcHRpb25hbDogc3R5bGluZyBvbiBub2RlIGNhcHRpb25zLiAqLwoud2VidHJlZW1hcC1jYXB0aW9uIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDExcHg7CiAgcGFkZGluZzogMnB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLyogT3B0aW9uYWw6IHN0eWxpbmcgb24gY2FwdGlvbnMgb24gbW91c2UgaG92ZXIuICovCi8qLndlYnRyZWVtYXAtbm9kZTpob3ZlciA+IC53ZWJ0cmVlbWFwLWNhcHRpb24gewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwp9Ki8K">
  <title>[combined] - Source Map Explorer</title>

  <style>
    html, body { height: 100% }

    body {
      font-family: sans-serif;
      font-size: 0.8em;
      margin: 0;
      display: flex;
    }

    select, .webtreemap-caption { font-family: sans-serif }

    #content {
      display: flex;
      width: 100%;
      flex-direction: column;
      padding: 15px;
    }

    #header {
      display: flex;
      padding: 0 0 15px 15px;
      align-items: center;
    }

    #header > * + * {
      margin-left: 5px;
    }

    .header-warning {
      cursor: pointer;
    }

    #map {
      flex-grow: 1;
      position: relative;
      cursor: pointer;
      -webkit-user-select: none;
    }
  </style>
</head>
<body>
  <div id="content">
    
    <div id="header">
      
        <label for="bundle-select">Bundle:&nbsp;</label>
        <select id="bundle-select">
          <option value="0">[combined] (3.63 KB)</option>
          <option value="1">data/foo.min.js (718 B)</option>
          <option value="2">data/inline-map.js (2.93 KB)</option>
        </select>
      

      
    </div>
    
    <div id="map"></div>
  </div>
</body>

<script>
const treeDataMap = {"0":{"name":"[combined]","data":{"name":"/ \u2022 3.63 KB \u2022 100.0%","data":{"$area":3717},"children":[{"name":"foo.min.js \u2022 718 B \u2022 19.3%","data":{"$area":718},"children":[{"name":"../../node_modules/browser-pack/_prelude.js \u2022 480 B \u2022 12.9%","data":{"$area":480}},{"name":"src \u2022 201 B \u2022 5.4%","data":{"$area":201},"children":[{"name":"bar.js \u2022 104 B \u2022 2.8%","data":{"$area":104}},{"name":"foo.js \u2022 97 B \u2022 2.6%","data":{"$area":97}}]},{"name":"[sourceMappingURL] \u2022 35 B \u2022 0.9%","data":{"$area":35}},{"name":"[unmapped] \u2022 1 B \u2022 0.0%","data":{"$area":1}},{"name":"[EOLs] \u2022 1 B \u2022 0.0%","data":{"$area":1}}]},{"name":"inline-map.js \u2022 2.93 KB \u2022 80.7%","data":{"$area":2999},"children":[{"name":"../../node_modules/browser-pack/_prelude.js \u2022 480 B \u2022 12.9%","data":{"$area":480}},{"name":"src \u2022 201 B \u2022 5.4%","data":{"$area":201},"children":[{"name":"bar.js \u2022 104 B \u2022 2.8%","data":{"$area":104}},{"name":"foo.js \u2022 97 B \u2022 2.6%","data":{"$area":97}}]},{"name":"[sourceMappingURL] \u2022 2.26 KB \u2022 62.3%","data":{"$area":2316}},{"name":"[unmapped] \u2022 1 B \u2022 0.0%","data":{"$area":1}},{"name":"[EOLs] \u2022 1 B \u2022 0.0%","data":{"$area":1}}]}]}},"1":{"name":"data/foo.min.js","data":{"name":"/ \u2022 718 B \u2022 100.0%","data":{"$area":718},"children":[{"name":"../../node_modules/browser-pack/_prelude.js \u2022 480 B \u2022 66.9%","data":{"$area":480}},{"name":"src \u2022 201 B \u2022 28.0%","data":{"$area":201},"children":[{"name":"bar.js \u2022 104 B \u2022 14.5%","data":{"$area":104}},{"name":"foo.js \u2022 97 B \u2022 13.5%","data":{"$area":97}}]},{"name":"[sourceMappingURL] \u2022 35 B \u2022 4.9%","data":{"$area":35}},{"name":"[unmapped] \u2022 1 B \u2022 0.1%","data":{"$area":1}},{"name":"[EOLs] \u2022 1 B \u2022 0.1%","data":{"$area":1}}]}},"2":{"name":"data/inline-map.js","data":{"name":"/ \u2022 2.93 KB \u2022 100.0%","data":{"$area":2999},"children":[{"name":"../../node_modules/browser-pack/_prelude.js \u2022 480 B \u2022 16.0%","data":{"$area":480}},{"name":"src \u2022 201 B \u2022 6.7%","data":{"$area":201},"children":[{"name":"bar.js \u2022 104 B \u2022 3.5%","data":{"$area":104}},{"name":"foo.js \u2022 97 B \u2022 3.2%","data":{"$area":97}}]},{"name":"[sourceMappingURL] \u2022 2.26 KB \u2022 77.2%","data":{"$area":2316}},{"name":"[unmapped] \u2022 1 B \u2022 0.0%","data":{"$area":1}},{"name":"[EOLs] \u2022 1 B \u2022 0.0%","data":{"$area":1}}]}}};
</script>

<script src="data:application/javascript;base64,"></script>

<script>
  let selectedBundleId = '0';

  function selectBundle(bundleId) {
    const bundle = treeDataMap[bundleId];
    appendTreemap(map, bundle.data);
    document.title = bundle.name + ' - Source Map Explorer';
  }

  const map = document.getElementById('map');

  const bundleSelect = document.getElementById('bundle-select');
  bundleSelect.addEventListener('change', function(event) {
    selectedBundleId = bundleSelect.value;
    selectBundle(selectedBundleId);
  })

  window.addEventListener('resize', function() {
    selectBundle(selectedBundleId);
  });

  selectBundle(selectedBundleId);
</script>
<html>


`

exports['CLI should output result as html 1'] = `
<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <link rel="stylesheet" href="data:text/css;base64,LyogVmVuZG9yZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vcm1taC93ZWJ0cmVlbWFwL2Jsb2IvOWZhMGMwNjZhMTBlYTQ0MDJkOTYwYjBjNmMxYTQzMjg0NmFjN2ZjNC93ZWJ0cmVlbWFwLmNzcyAqLwoKLndlYnRyZWVtYXAtbm9kZSB7CiAgLyogUmVxdWlyZWQgYXR0cmlidXRlcy4gKi8KICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgb3ZlcmZsb3c6IGhpZGRlbjsgICAvKiBUbyBoaWRlIG92ZXJsb25nIGNhcHRpb25zLiAqLwogIGJhY2tncm91bmQ6IHdoaXRlOyAgLyogTm9kZXMgbXVzdCBiZSBvcGFxdWUgZm9yIHpJbmRleCBsYXllcmluZy4gKi8KICBib3JkZXI6IHNvbGlkIDFweCBibGFjazsgIC8qIENhbGN1bGF0aW9ucyBhc3N1bWUgMXB4IGJvcmRlci4gKi8KCiAgLyogT3B0aW9uYWw6IENTUyBhbmltYXRpb24uICovCiAgdHJhbnNpdGlvbjogdG9wICAgIDAuM3MsCiAgICAgICAgICAgICAgbGVmdCAgIDAuM3MsCiAgICAgICAgICAgICAgd2lkdGggIDAuM3MsCiAgICAgICAgICAgICAgaGVpZ2h0IDAuM3M7Cn0KCi8qIE9wdGlvbmFsOiBoaWdobGlnaHQgbm9kZXMgb24gbW91c2VvdmVyLiAqLwoud2VidHJlZW1hcC1ub2RlOmhvdmVyIHsKICBiYWNrZ3JvdW5kOiAjZWVlOwp9CgovKiBPcHRpb25hbDogRGlmZmVyZW50IGJhY2tncm91bmQgY29sb3JzIGRlcGVuZGluZyBvbiBzeW1ib2wuICovCi53ZWJ0cmVlbWFwLXN5bWJvbC1ic3MgewogIGJhY2tncm91bmQ6ICM2NkMyQTU7Cn0KLndlYnRyZWVtYXAtc3ltYm9sLWRhdGEgewogIGJhY2tncm91bmQ6ICNGQzhENjI7Cn0KLndlYnRyZWVtYXAtc3ltYm9sLXJlYWQtb25seV9kYXRhIHsKICBiYWNrZ3JvdW5kOiAjOERBMENCOwp9Ci53ZWJ0cmVlbWFwLXN5bWJvbC1jb2RlIHsKICBiYWNrZ3JvdW5kOiAjRTc4QUMzOwp9Ci53ZWJ0cmVlbWFwLXN5bWJvbC13ZWFrX3N5bWJvbCB7CiAgYmFja2dyb3VuZDogI0E2RDg1NDsKfQoud2VidHJlZW1hcC1zeW1ib2wtYnNzLndlYnRyZWVtYXAtYWdncmVnYXRlIHsKICBiYWNrZ3JvdW5kOiAjQjNFMkNEOwp9Ci53ZWJ0cmVlbWFwLXN5bWJvbC1kYXRhLndlYnRyZWVtYXAtYWdncmVnYXRlIHsKICBiYWNrZ3JvdW5kOiAjRkRDREFDOwp9Ci53ZWJ0cmVlbWFwLXN5bWJvbC1yZWFkLW9ubHlfZGF0YS53ZWJ0cmVlbWFwLWFnZ3JlZ2F0ZSB7CiAgYmFja2dyb3VuZDogI0NCRDVFODsKfQoud2VidHJlZW1hcC1zeW1ib2wtY29kZS53ZWJ0cmVlbWFwLWFnZ3JlZ2F0ZSB7CiAgYmFja2dyb3VuZDogI0Y0Q0FFNDsKfQoud2VidHJlZW1hcC1zeW1ib2wtd2Vha19zeW1ib2wud2VidHJlZW1hcC1hZ2dyZWdhdGUgewogIGJhY2tncm91bmQ6ICNFNkY1Qzk7Cn0KCiNsZWdlbmQgPiAqIHsKICBib3JkZXI6IHNvbGlkIDFweCAjNDQ0Owp9CgovKiBPcHRpb25hbDogRGlmZmVyZW50IGJvcmRlcnMgZGVwZW5kaW5nIG9uIGxldmVsLiAqLwoud2VidHJlZW1hcC1sZXZlbDAgewogIGJvcmRlcjogc29saWQgMXB4ICM0NDQ7Cn0KLndlYnRyZWVtYXAtbGV2ZWwxIHsKICBib3JkZXI6IHNvbGlkIDFweCAjNjY2Owp9Ci53ZWJ0cmVlbWFwLWxldmVsMiB7CiAgYm9yZGVyOiBzb2xpZCAxcHggIzg4ODsKfQoud2VidHJlZW1hcC1sZXZlbDMgewogIGJvcmRlcjogc29saWQgMXB4ICNhYWE7Cn0KLndlYnRyZWVtYXAtbGV2ZWw0IHsKICBib3JkZXI6IHNvbGlkIDFweCAjY2NjOwp9CgovKiBPcHRpb25hbDogc3R5bGluZyBvbiBub2RlIGNhcHRpb25zLiAqLwoud2VidHJlZW1hcC1jYXB0aW9uIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDExcHg7CiAgcGFkZGluZzogMnB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLyogT3B0aW9uYWw6IHN0eWxpbmcgb24gY2FwdGlvbnMgb24gbW91c2UgaG92ZXIuICovCi8qLndlYnRyZWVtYXAtbm9kZTpob3ZlciA+IC53ZWJ0cmVlbWFwLWNhcHRpb24gewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwp9Ki8K">
  <title>data/inline-map.js - Source Map Explorer</title>

  <style>
    html, body { height: 100% }

    body {
      font-family: sans-serif;
      font-size: 0.8em;
      margin: 0;
      display: flex;
    }

    select, .webtreemap-caption { font-family: sans-serif }

    #content {
      display: flex;
      width: 100%;
      flex-direction: column;
      padding: 15px;
    }

    #header {
      display: flex;
      padding: 0 0 15px 15px;
      align-items: center;
    }

    #header > * + * {
      margin-left: 5px;
    }

    .header-warning {
      cursor: pointer;
    }

    #map {
      flex-grow: 1;
      position: relative;
      cursor: pointer;
      -webkit-user-select: none;
    }
  </style>
</head>
<body>
  <div id="content">
    
    <div id="map"></div>
  </div>
</body>

<script>
const treeDataMap = {"0":{"name":"data/inline-map.js","data":{"name":"/ \u2022 2.93 KB \u2022 100.0%","data":{"$area":2999},"children":[{"name":"../../node_modules/browser-pack/_prelude.js \u2022 480 B \u2022 16.0%","data":{"$area":480}},{"name":"src \u2022 201 B \u2022 6.7%","data":{"$area":201},"children":[{"name":"bar.js \u2022 104 B \u2022 3.5%","data":{"$area":104}},{"name":"foo.js \u2022 97 B \u2022 3.2%","data":{"$area":97}}]},{"name":"[sourceMappingURL] \u2022 2.26 KB \u2022 77.2%","data":{"$area":2316}},{"name":"[unmapped] \u2022 1 B \u2022 0.0%","data":{"$area":1}},{"name":"[EOLs] \u2022 1 B \u2022 0.0%","data":{"$area":1}}]}}};
</script>

<script src="data:application/javascript;base64,"></script>

<script>
  let selectedBundleId = '0';

  function selectBundle(bundleId) {
    const bundle = treeDataMap[bundleId];
    appendTreemap(map, bundle.data);
    document.title = bundle.name + ' - Source Map Explorer';
  }

  const map = document.getElementById('map');


  window.addEventListener('resize', function() {
    selectBundle(selectedBundleId);
  });

  selectBundle(selectedBundleId);
</script>
<html>


`

exports['CLI should print multiple results as JSON 1'] = `
{
  "results": [
    {
      "bundleName": "data/foo.min.js",
      "totalBytes": 718,
      "mappedBytes": 681,
      "unmappedBytes": 1,
      "eolBytes": 1,
      "sourceMapCommentBytes": 35,
      "files": {
        "../../node_modules/browser-pack/_prelude.js": {
          "size": 480
        },
        "src/bar.js": {
          "size": 104
        },
        "src/foo.js": {
          "size": 97
        },
        "[sourceMappingURL]": {
          "size": 35
        },
        "[unmapped]": {
          "size": 1
        },
        "[EOLs]": {
          "size": 1
        }
      }
    },
    {
      "bundleName": "data/inline-map.js",
      "totalBytes": 2999,
      "mappedBytes": 681,
      "unmappedBytes": 1,
      "eolBytes": 1,
      "sourceMapCommentBytes": 2316,
      "files": {
        "../../node_modules/browser-pack/_prelude.js": {
          "size": 480
        },
        "src/bar.js": {
          "size": 104
        },
        "src/foo.js": {
          "size": 97
        },
        "[sourceMappingURL]": {
          "size": 2316
        },
        "[unmapped]": {
          "size": 1
        },
        "[EOLs]": {
          "size": 1
        }
      }
    }
  ]
}

`

exports['CLI should print result as JSON and support path wrapped by quotes 1'] = `
{
  "results": [
    {
      "bundleName": "data/inline-map.js",
      "totalBytes": 2999,
      "mappedBytes": 681,
      "unmappedBytes": 1,
      "eolBytes": 1,
      "sourceMapCommentBytes": 2316,
      "files": {
        "../../node_modules/browser-pack/_prelude.js": {
          "size": 480
        },
        "src/bar.js": {
          "size": 104
        },
        "src/foo.js": {
          "size": 97
        },
        "[sourceMappingURL]": {
          "size": 2316
        },
        "[unmapped]": {
          "size": 1
        },
        "[EOLs]": {
          "size": 1
        }
      }
    }
  ]
}

`
